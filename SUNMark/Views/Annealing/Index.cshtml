@model SUNMark.Models.AnnealingMasterModel
@using Microsoft.AspNetCore.Http
@using SUNMark.Models;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int isAdministrator = HttpContextAccessor.HttpContext.Session.GetInt32("IsAdministrator").Value;
    List<SUNMark.Models.JobWorkEntryModel> jobworkentryList = ViewBag.jobworkentryList as List<SUNMark.Models.JobWorkEntryModel>;
    List<SelectListItem> layoutList = ViewBag.layoutList as List<SelectListItem>;
    List<SelectListItem> pageNoList = ViewBag.pageNoList as List<SelectListItem>;
    var userRight = ViewBag.userRight as SUNMark.Models.UserFormRightModel;
    ViewData["Title"] = userRight.ModuleNm;
    string headerAdd = "";
    string headerList = "";
    string gridAdd = "";
    string gridList = "";
    bool headerAddTrue = false;
    bool headerListTrue = false;
    int id = ViewBag.id != null ? (int)ViewBag.id : 0;
    int vNo = ViewBag.voucherNo != null ? Convert.ToInt32(ViewBag.voucherNo) : 0;

    List<SelectListItem> companyList = ViewBag.companyList != null ? ViewBag.companyList as List<SelectListItem> : null;
    List<SelectListItem> productList = ViewBag.productList != null ? ViewBag.productList as List<SelectListItem> : null;
    List<SelectListItem> shiftList = ViewBag.shiftList != null ? ViewBag.shiftList as List<SelectListItem> : null;
    List<CustomDropDown> employeeList = ViewBag.employeeList != null ? ViewBag.employeeList as List<CustomDropDown> : null;
    List<CustomDropDown> supervisorList = ViewBag.supervisorList != null ? ViewBag.supervisorList as List<CustomDropDown> : null;
    List<SelectListItem> milprocessList = ViewBag.milprocessList != null ? ViewBag.milprocessList as List<SelectListItem> : null;
    List<SelectListItem> gradeList = ViewBag.gradeList != null ? ViewBag.gradeList as List<SelectListItem> : null;
    List<SelectListItem> finishList = ViewBag.finishList != null ? ViewBag.finishList as List<SelectListItem> : null;


    if (userRight != null && (userRight.IsAdd || userRight.IsEdit) && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
    {
        headerAdd = "active";
        gridAdd = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
}
<div class="card card-primary">
    <div class="card-header" style="font-family:Verdana">
        <h6> @ViewData["Title"]</h6>
    </div>
    <div class="card-body">
        <div class="card card-primary card-tabs">
            <div class="card-header p-0 pt-1">
                <ul class="nav nav-tabs" id="custom-tabs-three-tab" role="tablist">
                    @if (userRight != null && userRight.IsList)
                    {
                        <li class="nav-item">
                            <a class="nav-link @headerList" id="custom-tabs-three-list-tab" data-toggle="pill" href="#custom-tabs-three-list" role="tab" aria-controls="custom-tabs-three-list" aria-selected="@headerListTrue" style="font-family:Verdana;font-size:small" onclick="GoToListTab()">List (Alt+L)</a>
                        </li>
                    }
                    @if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
                    {
                        <li class="nav-item">
                            <a class="nav-link @headerAdd" id="custom-tabs-three-add-tab" data-toggle="pill" href="#custom-tabs-three-add" role="tab" aria-controls="custom-tabs-three-add" aria-selected="@headerAddTrue" style="font-family:Verdana;font-size:small" onclick="GoToAddTab()">Add/Update (F2)</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="card-body">
                <div class="col-md-12">
                    <div class="tab-content" id="custom-tabs-three-tabContent">
                        @if (userRight != null && userRight.IsList)
                        {
                            <div class="tab-pane fade  @gridList" id="custom-tabs-three-list" role="tabpanel" aria-labelledby="custom-tabs-three-list-tab">
                                <div class="table-responsive mt-2" style="font-family:Verdana;font-size:small;font-display:inherit">
                                    <div class="col-md-12 col-12 mb-2 mt-2">
                                        <div class="row">
                                            <div class="col-md-1 mb-2 float-left">

                                                <select class="form-control form-control-sm" onchange="loadData()" id="drpReportPageNoDatable">
                                                    @for (int i = 0; i < pageNoList.Count; i++)
                                                    {
                                                        string checkedd = "checked";
                                                        <option checked="@checkedd" value="@pageNoList[i].Value">@pageNoList[i].Text</option>
                                                        checkedd = string.Empty;
                                                    }

                                                </select>

                                            </div>
                                            <div class="col-md-5 col-12">
                                                <div class="row">
                                                    <div class="col-md-6 col">
                                                        <select class="form-control select2 drpReportLayout" onchange="loadData()">
                                                            <option value="" ; style="width:200px">--Select Layout--</option>
                                                            @if (layoutList != null && layoutList.Count > 0)
                                                            {
                                                                foreach (var item in layoutList)
                                                                {
                                                                    <option value="@item.Value">@item.Text </option>
                                                                }
                                                            }
                                                        </select>
                                                    </div>
                                                    <div class="col-md-2 col-auto mb-2 custommt-2-3">
                                                        @if (isAdministrator == 1)
                                                        {
                                                            <button class="btn btn-dark btn-sm text-white" style="font-family:Verdana;font-size:medium" onclick="window.open('/GridMaster/Index/' + $('.drpReportLayout').val(), '_blank');">
                                                                Edit
                                                            </button>
                                                        }
                                                    </div>
                                                    <div class="col-md-4 mb-2 custommt-2-3">
                                                        <button class="btn btn-primary btn-sm" id="btnExportToExcel">Excel</button>
                                                        <button class="btn btn-primary btn-sm ml-6" id="btnExportToPDF">PDF</button>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-3"></div>
                                            <div class="col-md-3 col-12 float-right">
                                                <input type="text" class="form-control form-control-sm" placeholder="Search" id="txtReportSearchDataTable" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="dataTable">

                                    </div>
                                    <div class="pager float-right"></div>
                                </div>
                            </div>
                        }
                        @if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
                        {
                            <div class="tab-pane fade @gridAdd" id="custom-tabs-three-add" role="tabpanel" aria-labelledby="custom-tabs-three-add-tab">
                                <form method="post" class="mt-1" autocomplete="off" id="annealingForm">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="col-md-1 col-12">
                                                    <div class="form-group">
                                                        <label>VNo.<span class="text-danger" style="font-family: Verdana">*</span></label>
                                                        @Html.TextBoxFor(x => x.Vno, new { @class = "form-control ", @placeholder = "Voucher No", @type = "text", @disabled = "disabled" })
                                                        @Html.TextBoxFor(x => x.AnnVou, new { @class = "form-control ", @placeholder = "Voucher No", @type = "hidden", @disabled = "disabled" })
                                                    </div>
                                                </div>
                                                <div class="col-md-3 col-12">
                                                    <div class="form-group">
                                                        <label>Company<span class="text-danger" style="font-family: Verdana">*</span></label>
                                                        @Html.DropDownListFor(x => x.AnnCmpVou, companyList, "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important" })
                                                    </div>
                                                </div>

                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>Date<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                        @Html.TextBoxFor(x => x.Date, new { @class = "form-control ", @placeholder = "Voucher No", @type = "date" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>Shift<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                        @Html.DropDownListFor(x => x.Shift, shiftList, "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important", @onchange = "GetSupervisor()" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>Machine No<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                        @Html.DropDownListFor(x => x.MachineNo, new SelectList(milprocessList, "Value", "Text"), "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important",@onchange= "GetSupervisor()" })

                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Supervisor   </label>
                                                        @Html.DropDownListFor(x => x.SupEmpVou, new SelectList(supervisorList, "Value", "Text"), "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="row">

                                                <div class="col-md-3 col-6">
                                                    <div class="form-group">
                                                        <label>Manager</label>
                                                        @Html.DropDownListFor(x => x.ManEmpVou, new SelectList(employeeList, "Value", "Text"), "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Issue Product</label>
                                                        @Html.DropDownListFor(x => x.IssuePrdVou, new SelectList(productList, "Value", "Text"), "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Finish</label>
                                                        @Html.DropDownListFor(x => x.FinishVou, finishList, "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important" })
                                                        @Html.TextBoxFor(x => x.Finish, new { @class = "form-control ", @placeholder = "Grade", @type = "hidden" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Grade<span class="text-danger" style="font-family: Verdana">*</span></label>
                                                        @Html.DropDownListFor(x => x.GradeVou, gradeList, "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important" })
                                                        @Html.TextBoxFor(x => x.Grade, new { @class = "form-control ", @placeholder = "Grade", @type = "hidden" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Width<span class="text-danger" style="font-family: Verdana">*</span></label>
                                                        @Html.TextBoxFor(x => x.Width, new { @class = "form-control ", @placeholder = "Width", @type = "text" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Thick<span class="text-danger" style="font-family: Verdana">*</span></label>
                                                        @Html.TextBoxFor(x => x.Thick, new { @class = "form-control ", @placeholder = "Thick", @type = "text" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>OD</label>
                                                        @Html.TextBoxFor(x => x.OD, new { @class = "form-control ", @placeholder = "OD", @type = "text", @onchange = "GetNBSCHDetails(this)" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>No Of Pipe<span class="text-danger" style="font-family: Verdana">*</span></label>
                                                        @Html.TextBoxFor(x => x.NoOfPipe, new { @class = "form-control ", @placeholder = "No Of Pipe", @type = "text", @onchange = "GetODThickPCS(this)" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Weight</label>
                                                        @Html.TextBoxFor(x => x.Weight, new { @class = "form-control ", @placeholder = "Weight", @type = "text" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-6">
                                                    <div class="form-group">
                                                        <label>Rec Product<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                        @Html.DropDownListFor(x => x.RecPrdVou, new SelectList(productList, "Value", "Text"), "Select", new { @class = "form-control select2 w-100", @style = "width:100% !important" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>In Time</label>
                                                        @Html.TextBoxFor(x => x.InTime, new { @class = "form-control ", @placeholder = "In Time", @type = "text" })
                                                    </div>
                                                </div>

                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>Out Time</label>
                                                        @Html.TextBoxFor(x => x.OutTime, new { @class = "form-control ", @placeholder = "OutTime", @type = "text" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>Oil Level</label>
                                                        @Html.TextBoxFor(x => x.OilLevel, new { @class = "form-control ", @placeholder = "Oil level", @type = "number" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>LDO Qty</label>
                                                        @Html.TextBoxFor(x => x.LDOQty, new { @class = "form-control ", @placeholder = "LDO Qty", @type = "text" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>Hours</label>
                                                        @Html.TextBoxFor(x => x.Hours, new { @class = "form-control ", @placeholder = "Hours", @type = "number" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2 col-12">
                                                    <div class="form-group">
                                                        <label>RPM</label>
                                                        @Html.TextBoxFor(x => x.RPM, new { @class = "form-control ", @placeholder = "RPM", @type = "number" })
                                                    </div>
                                                </div>
                                                
                                                <div class="col-md-6 col-12">
                                                    <div class="form-group">
                                                        <label>Remarks</label>
                                                        @Html.TextBoxFor(x => x.Remarks, new { @class = "form-control ", @placeholder = "Remarks", @type = "text" })
                                                    </div>
                                                </div>
                                                
                                                <div class="col-md-12 text-center">
                                                    @if (userRight.IsEdit && id > 0)
                                                    {
                                                        <button class="btn btn-primary px-md-4 mb-2 text-white" style="font-family:Verdana;font-size:medium" id="btnSave" type="button" onclick="AddAnnealing()">
                                                            Save (F10)
                                                        </button>
                                                        <a href="/Annealing/index" class="btn btn-warning px-md-4 mb-2 text-dark" style="font-family:Verdana;font-size:medium">
                                                            Cancel (Esc)
                                                        </a>
                                                    }
                                                    else if (userRight.IsAdd && id == 0)
                                                    {
                                                        <button class="btn btn-primary px-md-4 mb-2 text-white" style="font-family:Verdana;font-size:medium" id="btnSave" type="button" onclick="AddAnnealing()">
                                                            Save (F10)
                                                        </button>
                                                        <a href="/Annealing/index" class="btn btn-warning px-md-4 mb-2 text-dark" style="font-family:Verdana;font-size:medium">
                                                            Cancel (Esc)
                                                        </a>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var Vou = '@Html.Raw(Model.AnnVou)';
        if (Vou != null && Vou != '' && Vou != 0) {
            GoToAddTab()
        }
        else {
            GoToListTab()
        }
    });

    function GoToAddTab() {
        $('#custom-tabs-three-list-tab').removeClass('active');
        $('#custom-tabs-three-add-tab').addClass('active');

        $('#custom-tabs-three-list').removeClass('active');
        $('#custom-tabs-three-add').addClass('active');
        $('#custom-tabs-three-add').addClass('show');
        setTimeout(function () {
            $('#AnnCmpVou').focus();
        },200)
    }

    function GoToListTab() {
        $('#custom-tabs-three-list-tab').addClass('active');
        $('#custom-tabs-three-add-tab').removeClass('active');

        $('#custom-tabs-three-list').addClass('active');
        $('#custom-tabs-three-list').addClass('show');
        $('#custom-tabs-three-add').removeClass('active');
        $('#custom-tabs-three-add').removeClass('show');
        $('#txtReportSearchDataTable').focus();
    }
</script>
<script>
    var isRecentCalledEsc = false;
    var isRecentCalledAddRows = false;
    var isRecentCalledSave = false;
    (function (code) {
        code(window.jQuery, document, window);
    }(function ($, document, window) {
        $(function () {
            $(window)
                .initKeyboard({ debug: 1 })
                .on('F2', function () {
                    GoToAddTab()
                }).on('F10', function () {
                    if (!isRecentCalledSave) {
                        $("#btnSave").click();
                        isRecentCalledSave = true;
                        setTimeout(function () {
                            isRecentCalledSave = false;
                        }, 1000)
                    }
                })
                .on('Alt+L', function () {
                    GoToListTab();
                })
                .on('Pagedown', function () {
                    if (!isRecentCalledAddRows) {
                        isRecentCalledAddRows = true;
                        AddRows();
                        setTimeout(function () {
                            isRecentCalledAddRows = false;
                        }, 500)
                    }
                })
                .on('Alt+C', function () {
                    if (confirm("Do you want to exit without save?")) {
                        location.href = '/Annealing/Index'
                    }
                    else {
                        $('#AnnCmpVou').focus();
                    }

                }).on('Escape', function () {
                    if (!isRecentCalledEsc) {
                        isRecentCalledEsc = true;
                        if (confirm("Do you want to exit without save?")) {
                            location.href = '/Milling/Index'
                        }
                        else {
                            $('#AnnCmpVou').focus();
                        }
                        setTimeout(function () {
                            isRecentCalledEsc = false;
                        }, 500)
                    }

                })
        });
    }));
</script>

<script>

    var isRecentCalled = false;

    $(function () {
        loadData();
        var pageIndex = '';
        var pageSize = '';
        var totalRecord = '';
        var isDelete = '@Html.Raw(userRight.IsDelete)';
        var isEdit = '@Html.Raw(userRight.IsEdit)';
    })

    var timer = null;
    $('#txtReportSearchDataTable').keyup(function (e) {
        if (e.keyCode >= 112 && e.keyCode <= 123) {
            e.preventDefault();
            return false;
        }
        else {
            clearTimeout(timer);

            timer = setTimeout(loadData, 1000)
        }

    });
    function loadData(pageIndex, columnName, sortBy) {
        isRecentCalled = true;
        if (pageIndex == undefined || pageIndex == "" || pageIndex == "0" || pageIndex == 0) {
            pageIndex = 1;
        }
        var layoutId = $('.drpReportLayout').val();

        if (!layoutId) {
            $('.drpReportLayout').val($('.drpReportLayout').children('option').eq(1).prop('value'));
            SetSelect2()

        }
        if (!columnName) {
            columnName = '';
        }
        if (!sortBy) {
            sortBy = '';
        }
        $('.dataTable').html();
        $.ajax({
            url: '/Annealing/GetReportView',
            type: 'GET',
            data: { pageIndex: pageIndex, pageSize: $('#drpReportPageNoDatable').val(), searchValue: $('#txtReportSearchDataTable').val(), gridMstId: $('.drpReportLayout').val(), columnName: columnName, sortby: sortBy },
            dataType: 'HTML',
            traditional: true, // add this
            success: function (data) {
                $('.dataTable').html(data);
                setTimeout(function () {
                    isRecentCalled = false;
                }, 2000)
            },
            failure: function (response) {
                errorMessage(response);
            }
        });
    }

    $('#btnExportToExcel').click(function () {
        window.location.href = "/Annealing/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&type=1";
    })

    $('#btnExportToPDF').click(function () {
        window.location.href = "/Annealing/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&type=2";
    })
</script>
<script>
    var isSaveCalled = false;
    function ValidateTextbox() {
        var isAllow = true;
        if (!$('select[name="AnnCmpVou"]').val()) {
            sAllow = false;
        }
        if (!$('input[name="Vno"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="Date"]').val()) {
            isAllow = false;
        }
        if (!$('select[name="Shift"]').val()) {
            isAllow = false;
        }
        if (!$('select[name="MachineNo"]').val()) {
            isAllow = false;
        }
        //if (!$('select[name="SupEmpVou"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('select[name="ManEmpVou"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('select[name="IssuePrdVou"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('select[name="FinishVou"]').val()) {
        //    isAllow = false;
        //}
        if (!$('select[name="GradeVou"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="Width"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="Thick"]').val()) {
            isAllow = false;
        }
        //if (!$('input[name="OD"]').val()) {
        //    isAllow = false;
        //}
        if (!$('input[name="NoOfPipe"]').val()) {
            isAllow = false;
        }
        //if (!$('input[name="Weight"]').val()) {
        //    isAllow = false;
        //}
        if (!$('select[name="RecPrdVou"]').val()) {
            isAllow = false;
        }
        //if (!$('input[name="InTime"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('input[name="OutTime"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('input[name="OilLevel"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('input[name="LDOQty"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('input[name="Hours"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('input[name="RPM"]').val()) {
        //    isAllow = false;
        //}
        
        return isAllow;
    }
    
    function AddAnnealing() {
        if (ValidateTextbox()) {
            $('#Vno').removeAttr('disabled')
            $('#AnnVou').removeAttr('disabled')
            //$('#SupEmpVou').removeAttr('disabled')
            //$('#ManEmpVou').removeAttr('disabled')
            $('#annealingForm').submit();
        }
        else {
            showErrorMessage("Please enter all compulsory fields.");
        }
    }

    $('#GradeVou').change(function () {
        if ($(this).val()) {
            $(this).next().next('input').val($(this).children('option:selected').html());
        }
        else {
            $(this).next().next('input').val('');
        }
    })

    $('#FinishVou').change(function () {
        if ($(this).val()) {
            $(this).next().next('input').val($(this).children('option:selected').html());
        }
        else {
            $(this).next().next('input').val('');
        }
    })
</script>
<script>

    function SetSelect2() {
        $(".select2").select2({
            placeholder: "---Select---",
        });
    }

    function GetSupervisor() {
        
        var macNo = $('#MachineNo').val();
        var shift = $('#Shift').val();
        if (macNo && shift) {
            $.ajax({
                url: '/Annealing/GetSupEmpByShiftMacNo',
                type: 'POST',
                data: { shift: shift, macNo: macNo},
                dataType: 'JSON',
                success: function (data) {
                    if (data) {
                        if (data.result) {
                            $('#SupEmpVou').val(data.sup);
                            $('#ManEmpVou').val(data.opr1);
                            //$('#abc').val(data.op2);
                            SetSelect2();
                        }
                        else {
                            $('#SupEmpVou').val('');
                            $('#ManEmpVou').val('');
                        }

                    }
                    else {
                        $('#SupEmpVou').val('');
                        $('#ManEmpVou').val('');
                    }
                },
                failure: function (response) {
                    errorMessage(response);
                }
            });
        }
    }
</script>
