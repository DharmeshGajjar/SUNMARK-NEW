@model SUNMark.Models.PackingMasterModel
@using Microsoft.AspNetCore.Http
@using SUNMark.Models;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int isAdministrator = HttpContextAccessor.HttpContext.Session.GetInt32("IsAdministrator").Value;
    List<SUNMark.Models.JobWorkEntryModel> jobworkentryList = ViewBag.jobworkentryList as List<SUNMark.Models.JobWorkEntryModel>;
    List<SelectListItem> layoutList = ViewBag.layoutList as List<SelectListItem>;
    List<SelectListItem> pageNoList = ViewBag.pageNoList as List<SelectListItem>;
    var userRight = ViewBag.userRight as SUNMark.Models.UserFormRightModel;
    ViewData["Title"] = userRight.ModuleNm;
    string headerAdd = "";
    string headerList = "";
    string gridAdd = "";
    string gridList = "";
    bool headerAddTrue = false;
    bool headerListTrue = false;
    int id = ViewBag.id != null ? (int)ViewBag.id : 0;
    int vNo = ViewBag.voucherNo != null ? Convert.ToInt32(ViewBag.voucherNo) : 0;
    List<SelectListItem> companyList = ViewBag.companyList != null ? ViewBag.companyList as List<SelectListItem> : null;
    List<SelectListItem> typeList = ViewBag.typeList != null ? ViewBag.typeList as List<SelectListItem> : null;
    List<CustomDropDown> productList = ViewBag.productList != null ? ViewBag.productList as List<CustomDropDown> : null;
    List<SelectListItem> specificationList = ViewBag.specificationList != null ? ViewBag.specificationList as List<SelectListItem> : null;
    List<SelectListItem> gradeList = ViewBag.gradeList != null ? ViewBag.gradeList as List<SelectListItem> : null;
    List<SelectListItem> finishList = ViewBag.finishList != null ? ViewBag.finishList as List<SelectListItem> : null;
    List<CustomDropDown> employeeList = ViewBag.employeeList != null ? ViewBag.employeeList as List<CustomDropDown> : null;
    List<SelectListItem> noofcopy = ViewBag.noofcopy != null ? ViewBag.noofcopy as List<SelectListItem> : null;
    if (userRight != null && (userRight.IsAdd || userRight.IsEdit) && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
    {
        headerAdd = "active";
        gridAdd = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
}
<style>
    #packingForm .custom-text-decorate {
        color: red;
        font-weight: bold;
        font-size: 18px;
    }
    #packingForm label {
        color: blue !important;
        font-weight:normal !important
    }
    #packingForm .form-control {
        font-weight: bold !important;
        font-size: 18px !important
    }
</style>
<div class="card card-primary">
    <div class="card-header" style="font-family:Verdana">
        <h6> @ViewData["Title"]</h6>
    </div>
    <div class="card-body">
        <div class="card card-primary card-tabs">
            <div style="margin:10px">
                <div class="row" style="width:800px">
                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Type <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.DropDownListFor(x => x.SearchType, typeList, "Select", new { @class = "form-control select2", @style = "background-color:yellow; font-weight:bold" })
                        </div>
                    </div>
                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Bundle No. <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.TextBoxFor(x => x.SearcBundleNo, new { @class = "form-control", @tabindex = "3", @type = "text" })
                        </div>
                    </div>
                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Wo No. <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.TextBoxFor(x => x.SearcWONumber, new { @class = "form-control", @tabindex = "4", @type = "text" })
                        </div>
                    </div>

                </div>
              
                <div class="row" style="width:800px">
                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Po No. <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.TextBoxFor(x => x.SearcPONumber, new { @class = "form-control",  @tabindex = "4", @type = "text" })
                        </div>
                    </div>
                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Date From <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.TextBoxFor(x => x.FrRecDt, new { @class = "form-control",  @tabindex = "8", @type = "date" })
                        </div>
                    </div>
                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Date To <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            @Html.TextBoxFor(x => x.ToRecDt, new { @class = "form-control",  @tabindex = "8", @type = "date" })
                        </div>
                    </div>

                </div>

                <div class="row" style="width:900px">
                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Paging <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            <select class="form-control" onchange="loadData()" id="drpReportPageNoDatable">
                                @for (int i = 0; i < pageNoList.Count; i++)
                                {
                                    string checkedd = "checked";
                                    <option checked="@checkedd" value="@pageNoList[i].Value">@pageNoList[i].Text</option>
                                    checkedd = string.Empty;
                                }

                            </select>
                        </div>
                    </div>

                    <div class="col-md">
                        <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                            Layout <span class="required"></span>
                        </label>
                        <div class="form-outline form-white mb-2">
                            <select class="form-control select2 drpReportLayout" onchange="loadData()">
                                <option value="" ; style="width:200px">--Select Layout--</option>
                                @if (layoutList != null && layoutList.Count > 0)
                                {
                                    foreach (var item in layoutList)
                                    {
                                        <option value="@item.Value">@item.Text </option>
                                    }
                                }
                            </select>

                        </div>
                    </div>
                    
                    <div class="col-md" style="margin-top:31px">
                        <button class="btn btn-primary  text-white" style="font-family:Verdana;font-size:medium" id="btnSave" onclick=" loadData();">
                            View (Alt+V)
                        </button>
                        <a href="/PackingMaster/index" class="btn btn-warning px-4 text-dark" style="font-family:Verdana;font-size:medium">
                            Cancel (Esc)
                        </a>
                    </div>

                </div>
            </div>
               

            
                <div class="card-header p-0 pt-1">
                    <ul class="nav nav-tabs" id="custom-tabs-three-tab" role="tablist">
                        @if (userRight != null && userRight.IsList)
                        {
                            <li class="nav-item">
                                <a class="nav-link @headerList" id="custom-tabs-three-list-tab" data-toggle="pill" href="#custom-tabs-three-list" role="tab" aria-controls="custom-tabs-three-list" aria-selected="@headerListTrue" style="font-family:Verdana;font-size:small" onclick="GoToListTab()">List (Alt+L)</a>
                            </li>
                        }
                        @if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
                        {
                            <li class="nav-item">
                                <a class="nav-link @headerAdd" id="custom-tabs-three-add-tab" data-toggle="pill" href="#custom-tabs-three-add" role="tab" aria-controls="custom-tabs-three-add" aria-selected="@headerAddTrue" style="font-family:Verdana;font-size:small" onclick="GoToAddTab()">Add/Update (F2)</a>
                            </li>
                        }
                    </ul>
                </div>
                <div class="card-body">
                    <div class="col-md-12">
                        <div class="tab-content" id="custom-tabs-three-tabContent">
                            @if (userRight != null && userRight.IsList)
                            {
                                <div class="tab-pane fade  @gridList" id="custom-tabs-three-list" role="tabpanel" aria-labelledby="custom-tabs-three-list-tab">
                                    <div class="table-responsive mt-2" style="font-family:Verdana;font-size:small;font-display:inherit">
                                        <div class="col-md-12 col-12 mb-2 mt-2">
                                            <div class="row">
                                              
                                                <div class="col-md-5 col-12">
                                                    <div class="row">
                                                       
                                                        <div class="col-md-2 col-auto mb-2 custommt-2-3">
                                                            @if (isAdministrator == 1)
                                                            {
                                                                <button class="btn btn-dark btn-sm text-white" style="font-family:Verdana;font-size:medium" onclick="window.open('/GridMaster/Index/' + $('.drpReportLayout').val(), '_blank');">
                                                                    Edit
                                                                </button>
                                                            }
                                                        </div>
                                                        <div class="col-md-4 mb-2 custommt-2-3">
                                                            <button class="btn btn-primary btn-sm" id="btnExportToExcel">Excel</button>
                                                            <button class="btn btn-primary btn-sm ml-6" id="btnExportToPDF">PDF</button>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="col-md-3"></div>
                                                <div class="col-md-3 col-12 float-right">
                                                    <input type="text" class="form-control form-control-sm" placeholder="Search" id="txtReportSearchDataTable" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="dataTable">

                                        </div>
                                        <div class="pager float-right"></div>
                                    </div>
                                </div>
                            }
                            @if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
                            {
                                <div class="tab-pane fade @gridAdd" id="custom-tabs-three-add" role="tabpanel" aria-labelledby="custom-tabs-three-add-tab">
                                    <form method="post" class="mt-1" autocomplete="off" id="packingForm">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="row">
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Company<span class="text-danger" style="font-family: Verdana">*</span></label>
                                                            @Html.DropDownListFor(x => x.CompanyVou, companyList, "Select", new { @class = "form-control select2" })
                                                            @Html.TextBoxFor(x => x.Vou, new { @class = "form-control ", @placeholder = "Bundle No", @type = "hidden" })
                                                            @Html.TextBoxFor(x => x.IsUpdate, new { @class = "form-control ", @placeholder = "Bundle No", @type = "hidden" })
                                                        </div>
                                                    </div>

                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Type<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.DropDownListFor(x => x.Type, typeList, "Select", new { @class = "form-control select2" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Bundle No<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.BundleNo, new { @class = "form-control ", @placeholder = "Bundle No", @type = "number" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>SrNo<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.SrNo, new { @class = "form-control ", @placeholder = "Sr No", @type = "number" })

                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>WO No<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.WONumber, new { @class = "form-control ", @placeholder = "WO Number", @type = "text", @onchange = "GetDataByWONumber()", @style = "background-color:yellow" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>PO No<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.PONumber, new { @class = "form-control ", @placeholder = "PO Number", @type = "text", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="row">


                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Product Code<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @*@Html.DropDownListFor(x => x.ProductVou, new SelectList(productList, "Value", "Text"), "Select", new { @class = "form-control select2" })*@


                                                            @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control ", @maxlength = "15", @placeholder = "Product Code", @onchange = "GetDataByProductCode()" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Heat No<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.HeatNumber, new { @class = "form-control ", @placeholder = "Heat Number", @type = "text" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Qty(In PCS)<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.Qty, new { @class = "form-control ", @placeholder = "QTY(In PCS)", @type = "number", @onchange = "CalculateFeetAndMeter()" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Qty In KG<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.QtyInKg, new { @class = "form-control custom-text-decorate ", @placeholder = "Qty In KG", @type = "number", @style = "border-color:red; background-color:white" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Feet Per PCS<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.FeetInPCS, new { @class = "form-control ", @placeholder = "Feet Per PCS", @type = "number", })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Qty In Feet<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.QtyInFeet, new { @class = "form-control ", @placeholder = "Qty In Feet", @type = "number" })
                                                        </div>
                                                    </div>

                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Qty In Meter<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.QtyInMeter, new { @class = "form-control ", @placeholder = "Qty In Meter", @type = "number" })
                                                        </div>
                                                    </div>


                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Specification<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.DropDownListFor(x => x.SpecificationVou, specificationList, "Select", new { @class = "form-control select2" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Grade<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.DropDownListFor(x => x.GradeVou, gradeList, "Select", new { @class = "form-control select2" })
                                                            @Html.TextBoxFor(x => x.Grade, new { @class = "form-control ", @placeholder = "Finish", @type = "hidden" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Thick<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.Thick, new { @class = "form-control ", @placeholder = "Thick", @type = "number" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>OD<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.OD, new { @class = "form-control ", @placeholder = "OD", @type = "number" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Size<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.NB, new { @class = "form-control ", @placeholder = "Bundle No", @type = "hidden" })

                                                            @Html.TextBoxFor(x => x.SCH, new { @class = "form-control ", @placeholder = "Bundle No", @type = "hidden" })


                                                            @Html.TextBoxFor(x => x.NbSCHBind, new { @class = "form-control ", @placeholder = "NB", @type = "text", @maxlength = 20 })





                                                        </div>
                                                    </div>
                                                    @*<div class="col-md-2 col-12">
                                                <div class="form-group">
                                                    <label>NB<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                    @Html.TextBoxFor(x => x.NB, new { @class = "form-control ", @placeholder = "NB", @type = "text", @maxlength = 20 })
                                                </div>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <div class="form-group">
                                                    <label>SCH<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                    @Html.TextBoxFor(x => x.SCH, new { @class = "form-control ", @placeholder = "SCH", @type = "text", @maxlength = 20 })
                                                </div>
                                            </div>*@
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>Finish<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.DropDownListFor(x => x.FinishVou, finishList, "Select", new { @class = "form-control select2" })
                                                            @Html.TextBoxFor(x => x.Finish, new { @class = "form-control ", @placeholder = "Finish", @type = "hidden" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Sub Bundle<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.SubBundleNumber, new { @class = "form-control ", @placeholder = "Sub Bundle Number", @type = "text" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Packing Date<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.TextBoxFor(x => x.PackingDate, new { @class = "form-control ", @placeholder = "Packing Date", @type = "date" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Packer Name<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.DropDownListFor(x => x.PackerName, new SelectList(employeeList, "Value", "Text"), "Select", new { @class = "form-control select2" })
                                                        </div>
                                                    </div><div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Qual. Checker Name<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                            @Html.DropDownListFor(x => x.QualityCheckerName, new SelectList(employeeList, "Value", "Text"), "Select", new { @class = "form-control select2" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-6">

                                                    </div>
                                                    <div class="col-md-2 col-6">
                                                        <div class="form-group">
                                                            <label>No Of Copy</label>
                                                            @*@Html.TextBoxFor(x => x.NoOfCopy, new { @class = "form-control ", @placeholder = "No Of Copy", @type = "number", @min = "1" })*@

                                                            @Html.DropDownListFor(x => x.NoOfCopy, noofcopy, "Select", new { @class = "form-control select2" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Out Date</label>
                                                            @Html.TextBoxFor(x => x.OutDate, new { @class = "form-control ", @placeholder = "Out Date", @type = "date" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 col-12">
                                                        <div class="form-group">
                                                            <label>Out By</label>
                                                            @Html.TextBoxFor(x => x.OutBy, new { @class = "form-control ", @placeholder = "Out By", @type = "text" })
                                                        </div>
                                                    </div>



                                                    @*<div class="col-md-2 col-6">
                                                <div class="form-group">
                                                    <label>Width<span class="text-danger" style="font-family: Verdana"> *</span></label>
                                                    @Html.TextBoxFor(x => x.Width, new { @class = "form-control ", @placeholder = "Width", @type = "number" })
                                                </div>
                                            </div>*@













                                                    <div class="col-md-12 text-center">
                                                        @if (userRight.IsEdit && id > 0)
                                                        {
                                                            <button class="btn btn-primary px-md-4 mb-2 text-white" style="font-family:Verdana;font-size:medium" id="btnSave" type="button" onclick="AddPacking()">
                                                                Save (F10)
                                                            </button>
                                                            <a href="/PackingMaster/index" class="btn btn-warning px-md-4 mb-2 text-dark" style="font-family:Verdana;font-size:medium">
                                                                Cancel (Esc)
                                                            </a>
                                                        }
                                                        else if (userRight.IsAdd && id == 0)
                                                        {
                                                            <button class="btn btn-primary px-md-4 mb-2 text-white" style="font-family:Verdana;font-size:medium" id="btnSave" type="button" onclick="AddPacking()">
                                                                Save (F10)
                                                            </button>
                                                            <a href="/PackingMaster/index" class="btn btn-warning px-md-4 mb-2 text-dark" style="font-family:Verdana;font-size:medium">
                                                                Cancel (Esc)
                                                            </a>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        
</div>
    </div>
@*<script>
    setFocusToTextBox();
    function setFocusToTextBox() {
        document.getElementById("QtyInKg").focus();
    }
</script>*@
<script>
    $(document).ready(function () {
        debugger;
        var CompanyVou = $('#CompanyVou').val();
        var IsUpdate = $('#IsUpdate').val();
        if (IsUpdate=="True") {
            GoToAddTab()
           
        }
        else {
            name = "CompanyVou"
            GoToListTab()
        }
        $('#WONumber').focus();
    });

    function GoToAddTab() {
        $('#custom-tabs-three-list-tab').removeClass('active');
        $('#custom-tabs-three-add-tab').addClass('active');

        $('#custom-tabs-three-list').removeClass('active');
        $('#custom-tabs-three-add').addClass('active');
        $('#custom-tabs-three-add').addClass('show');
        setTimeout(function () {
            //$('#CompanyVou').focus();
        }, 200)

    }

    function GoToListTab() {
        $('#custom-tabs-three-list-tab').addClass('active');
        $('#custom-tabs-three-add-tab').removeClass('active');

        $('#custom-tabs-three-list').addClass('active');
        $('#custom-tabs-three-list').addClass('show');
        $('#custom-tabs-three-add').removeClass('active');
        $('#custom-tabs-three-add').removeClass('show');
        $('#txtReportSearchDataTable').focus();
    }
</script>
<script>
    var isRecentCalledEsc = false;
    var isRecentCalledAddRows = false;
    var isRecentCalledSave = false;
    (function (code) {
        code(window.jQuery, document, window);
    }(function ($, document, window) {
        $(function () {
            $(window)
                .initKeyboard({ debug: 1 })
                .on('F2', function () {
                    GoToAddTab()
                }).on('F10', function () {
                    if (!isRecentCalledSave) {
                        $("#btnSave").click();
                        isRecentCalledSave = true;
                        setTimeout(function () {
                            isRecentCalledSave = false;
                        }, 1000)
                    }
                })
                .on('Alt+L', function () {
                    GoToListTab();
                })
                .on('Pagedown', function () {
                    if (!isRecentCalledAddRows) {
                        isRecentCalledAddRows = true;
                        AddRows();
                        setTimeout(function () {
                            isRecentCalledAddRows = false;
                        }, 500)
                    }
                })
                .on('Alt+C', function () {
                    if (confirm("Do you want to exit without save?")) {
                        location.href = '/PackingMaster/Index'
                    }
                    else {
                        //$('#CompanyVou').focus();
                    }

                }).on('Escape', function () {
                    if (!isRecentCalledEsc) {
                        isRecentCalledEsc = true;
                        if (confirm("Do you want to exit without save?")) {
                            location.href = '/PackingMaster/Index'
                        }
                        else {
                            //$('#CompanyVou').focus();
                        }
                        setTimeout(function () {
                            isRecentCalledEsc = false;
                        }, 500)
                    }

                })
        });
    }));
</script>

<script>

    var isRecentCalled = false;

    $(function () {
        //loadData();
        var pageIndex = '';
        var pageSize = '';
        var totalRecord = '';
        var isDelete = '@Html.Raw(userRight.IsDelete)';
        var isEdit = '@Html.Raw(userRight.IsEdit)';
    })

    var timer = null;
    $('#txtReportSearchDataTable').keyup(function (e) {
        if (e.keyCode >= 112 && e.keyCode <= 123) {
            e.preventDefault();
            return false;
        }
        else {
            clearTimeout(timer);

            timer = setTimeout(loadData, 1000)
        }

    });
    function loadData(pageIndex, columnName, sortBy) {
        debugger;
        isRecentCalled = true;
        if (pageIndex == undefined || pageIndex == "" || pageIndex == "0" || pageIndex == 0) {
            pageIndex = 1;
        }
        var layoutId = $('.drpReportLayout').val();

        if (!layoutId) {
            $('.drpReportLayout').val($('.drpReportLayout').children('option').eq(1).prop('value'));
            //SetSelect2()

        }
        if (!columnName) {
            columnName = '';
        }
        if (!sortBy) {
            sortBy = '';
        }

        var SearchType = $('#SearchType').val();
        var SearcBundleNo = $('#SearcBundleNo').val();
        var SearcWONumber = $('#SearcWONumber').val();
        var SearcPONumber = $('#SearcPONumber').val();
        var frRecDt = $('#FrRecDt').val();
        var toRecDt = $('#ToRecDt').val();
      

        $('.dataTable').html();
        $.ajax({
            url: '/PackingMaster/GetReportView',
            type: 'GET',
            data: { pageIndex: pageIndex, pageSize: $('#drpReportPageNoDatable').val(), searchValue: $('#txtReportSearchDataTable').val(), gridMstId: $('.drpReportLayout').val(), columnName: columnName, sortby: sortBy, SearchType: SearchType, SearcBundleNo: SearcBundleNo, SearcWONumber: SearcWONumber, SearcPONumber: SearcPONumber, frRecDt: frRecDt, toRecDt: toRecDt, },
            dataType: 'HTML',
            traditional: true, // add this
            success: function (data) {
                $('.dataTable').html(data);
                setTimeout(function () {
                    isRecentCalled = false;
                }, 2000)
            },
            failure: function (response) {
                errorMessage(response);
            }
        });
    }

    $('#btnExportToExcel').click(function () {
        window.location.href = "/PackingMaster/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&type=1";
    })

    $('#btnExportToPDF').click(function () {
        window.location.href = "/PackingMaster/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&type=2";
    })
</script>
<script>
    var productList = JSON.parse('@Html.Raw(Json.Serialize(productList))');


    function AddPacking() {
        var ProductCode = $('#ProductCode').val();
        var Qty = $('#Qty').val();
        if (ProductCode == "") {
            showErrorMessage("Enter Product Code");
            $('#ProductCode').focus();
        }
        else if (Qty == "") {
            showErrorMessage("Enter Qty In Pcs");
            $('#Qty').focus();
        }
        else {

            if (ValidateTextbox()) {
                $('#packingForm').submit();
            }
            else {
                showErrorMessage("Please enter all compulsory fields.");
            }
        }
    }

    function ValidateTextbox() {
        debugger;
        var isAllow = true;
        if (!$('select[name="CompanyVou"]').val()) {
            sAllow = false;
        }
        if (!$('select[name="Type"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="BundleNo"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="SrNo"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="WONumber"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="PONumber"]').val()) {
            isAllow = false;
        }
        //if (!$('select[name="ProductVou"]').val()) {
        //    isAllow = false;
        //}
        if (!$('input[name="ProductCode"]').val()) {
            isAllow = false;
        }
        if (!$('select[name="SpecificationVou"]').val()) {
            isAllow = false;
        }
        if (!$('select[name="FinishVou"]').val()) {
            isAllow = false;
        }
        if (!$('select[name="GradeVou"]').val()) {
            isAllow = false;
        }
        //if (!$('input[name="Width"]').val()) {
        //    isAllow = false;
        //}
        if (!$('input[name="Thick"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="OD"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="HeatNumber"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="Qty"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="FeetInPCS"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="QtyInFeet"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="QtyInMeter"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="QtyInKg"]').val()) {
            isAllow = false;
        }
        if (!$('select[name="PackerName"]').val()) {
            isAllow = false;
        }
        if (!$('select[name="QualityCheckerName"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="SubBundleNumber"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="PackingDate"]').val()) {
            isAllow = false;
        }
        //if (!$('input[name="OutDate"]').val()) {
        //    isAllow = false;
        //}
        //if (!$('input[name="OutBy"]').val()) {
        //    isAllow = false;
        //}
        return isAllow;
    }

    $('input[name="BundleNo"]').focusout(function () {
        if ($('input[name="SrNo"]').val()) {
            $('input[name="Qty"]').focus();
        }
    })

    $('select[name="ProductVou"]').change(function () {
        if ($(this).val()) {
            var value = $(this).val();
            var code = ''
            if (productList != null && productList.length > 0) {
                for (var x = 0; x < productList.length; x++) {
                    if (value == productList[x].value) {
                        code = productList[x].value1
                        break;
                    }
                }
                //$('input[name="ProductCode"]').val(code.toString().trim());
            }
        }
    })


    $('select[name="FinishVou"]').change(function () {
        if ($(this).val()) {
            var value = $(this).children('option:selected').html();
            $('input[name="Finish"]').val(value);
        }
    })

    $('select[name="GradeVou"]').change(function () {
        if ($(this).val()) {
            var value = $(this).children('option:selected').html();
            $('input[name="Grade"]').val(value);
        }
    })

    $(function () {
        $('select[name="FinishVou"]').change();
        $('select[name="GradeVou"]').change();
        $('select[name="ProductVou"]').change();
        $('#GradeVou').attr('disabled', true);
        $('#Width').attr('readonly', true);
        $('#Thick').attr('readonly', true);
        $('#OD').attr('readonly', true);
       // $('#Qty').attr('readonly', true);
        $('#FeetInPCS').attr('readonly', true);
        $('#QtyInFeet').attr('readonly', true);
        $('#QtyInMeter').attr('readonly', true);
        $('#NB').attr('readonly', true);
        $('#SCH').attr('readonly', true);
    });

    function GetDataByWONumber() {
        var WONumber = $('#WONumber').val();
        if (WONumber) {
            $.ajax({
                type: "POST",
                url: '/PackingMaster/GetDataByWONumber',
                data: { "WONumber": WONumber },
                dataType: "JSON",
                success: function (response) {
                    if (response) {
                        if (response.result) {
                            $('#PONumber').val(response.data[0]);
                            
                        }
                        else {
                            showErrorMessage(response.message);
                            $('#PONumber').val("");
                            
                            $('#WONumber').focus();
                        }
                    }
                    else {
                        showErrorMessage("Internal Error!");
                        $('#PONumber').val("");

                        $('#WONumber').focus();
                    }
                },
                error: function (response) {

                }
            });
        }
        else {
            showErrorMessage("Enter WO No");
            $('#WONumber').focus();
        }
    }
    GetDataByProductCode();
    function GetDataByProductCode() {
        var ProductCode = $('#ProductCode').val();
        if (ProductCode) {
            $.ajax({
                type: "POST",
                url: '/PackingMaster/GetDataByProductCode',
                data: { "ProductCode": ProductCode },
                dataType: "JSON",
                success: function (response) {
                    if (response) {
                        if (response.result) {
                            debugger;
                            //alert(response.data[0]);
                            $('#GradeVou').val(response.data[0]);
                            $('#Width').val(response.data[1]);
                            $('#Thick').val(response.data[2]);
                            $('#OD').val(response.data[3]);
                            //$('#Qty').val(response.data[4]);
                            $('#FeetInPCS').val(response.data[5]);
                            $('#QtyInFeet').val(response.data[6]);
                            $('#QtyInMeter').val(response.data[7]);
                            $('#NB').val(response.data[8]);
                            $('#SCH').val(response.data[9]);
                            $('#NbSCHBind').val(response.data[10]);
                           CalculateFeetAndMeter();

                        }
                        else {
                            showErrorMessage(response.message);
                            $('#GradeVou').val('');
                            $('#Width').val('');
                            $('#Thick').val('');
                            $('#OD').val('');
                            //$('#Qty').val('');
                            $('#FeetInPCS').val('');
                            $('#QtyInFeet').val('');
                            $('#QtyInMeter').val('');
                            $('#NB').val('');
                            $('#SCH').val('');

                            $('#ProductCode').focus();
                        }
                    }
                    else {
                        showErrorMessage("Internal Error!");
                        $('#GradeVou').val('');
                        $('#Width').val('');
                        $('#Thick').val('');
                        $('#OD').val('');
                        $('#Qty').val('');
                        $('#FeetInPCS').val('');
                        $('#QtyInFeet').val('');
                        $('#QtyInMeter').val('');
                        $('#NB').val('');
                        $('#SCH').val('');

                        $('#ProductCode').focus();
                    }
                },
                error: function (response) {

                }
            });
        }
        else {
            showErrorMessage("Enter Product Code");
            $('#ProductCode').focus();
        }
    }
    GetLastPackerAndQualityName();
    function GetLastPackerAndQualityName() {
     
            $.ajax({
                type: "GET",
                url: '/PackingMaster/GetLastPackerAndQualityName',
                dataType: "JSON",
                success: function (response) {
                    if (response) {
                        if (response.result) {
                            //alert(response.data[0]);
                            $('#PackerName').val(response.data[0]);
                            $('#QualityCheckerName').val(response.data[1]);
                            $('#PackingDate').val(response.data[2]);
                            
                        }
                    }
                   
                },
                error: function (response) {

                }
            });
       
    }

    function CalculateFeetAndMeter() {
        var qty = $('#Qty').val();
        var FeetInPCS = $('#FeetInPCS').val();
        var QtyInFeet = qty * FeetInPCS;
        $('#QtyInFeet').val(QtyInFeet);
        var lengthmtr = (QtyInFeet * 0.3048).toFixed(2);
      //  var QtyInMeter = qty * FeetInPCS * 0.3048;
        $('#QtyInMeter').val(lengthmtr);
        //QtyInMeter
        //0.3048

    }
</script>
