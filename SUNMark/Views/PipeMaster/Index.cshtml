@model SUNMark.Models.CoilMasterModel
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
    int isAdministrator = HttpContextAccessor.HttpContext.Session.GetInt32("IsAdministrator").Value;
    List<SUNMark.Models.CoilMasterModel> coilList = ViewBag.coilList as List<SUNMark.Models.CoilMasterModel>;
    List<SelectListItem> layoutList = ViewBag.layoutList as List<SelectListItem>;
    List<SelectListItem> pageNoList = ViewBag.pageNoList as List<SelectListItem>;
    List<SelectListItem> processList = ViewBag.processList != null ? ViewBag.processList as List<SelectListItem> : null;
    var userRight = ViewBag.userRight as SUNMark.Models.UserFormRightModel;
    ViewData["Title"] = userRight.ModuleNm;
    string headerAdd = "";
    string headerList = "";
    string gridAdd = "";
    string gridList = "";
    bool headerAddTrue = false;
    bool headerListTrue = false;

    if (userRight != null && (userRight.IsAdd || userRight.IsEdit) && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
    {
        headerAdd = "active";
        gridAdd = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
}

<style>
    #tblDisplay thead tr th {
        padding: 5px !important;
        text-align: center
    }

    #tblDisplay tbody tr td {
        padding: 5px !important;
        text-align: center
    }
</style>


<div class="card card-primary">
    <div class="card-header" style="font-family:Verdana">
        <h6> @ViewData["Title"]</h6>
    </div>
    <div class="card-body">
        <div class="col-md-12">
            @if (userRight != null && userRight.IsList)
            {
                <div class="table-responsive mt-1" style="font-family:Verdana;font-size:small;font-display:inherit">
                    <div class="row mt-3">
                        @*<div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                Finish <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.FInishVou, Model.FinishList, "Select", new { @class = "form-control select2 FInishVou ", @tabindex = "1", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>*@
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                OD <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.TextBoxFor(x => x.OD, new { @class = "form-control form-control-lg", @placeholder = "OD", @tabindex = "2", @style = "font-family: Verdana;font-size:small; height:30px; width:180px", @type = "text" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                Langth <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.TextBoxFor(x => x.FeetPer, new { @class = "form-control form-control-lg", @placeholder = "Langth", @tabindex = "3", @style = "font-family: Verdana;font-size:small; height:30px; width:180px", @type = "text" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                NB <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.NB, Model.NBList, "Select", new { @class = "form-control select2 NB ", @tabindex = "4", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                SCH <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.SCH, Model.SCHList, "Select", new { @class = "form-control select2 SCH ", @tabindex = "5", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                Grade <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.Grade, Model.GradeList, "Select", new { @class = "form-control select2 Grade ", @tabindex = "6", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                From Dt. <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.TextBoxFor(x => x.FrRecDt, new { @class = "form-control form-control-lg", @placeholder = "From Rec.Dt", @tabindex = "7", @style = "font-family: Verdana;font-size:small; height:30px; width:180px", @type = "date" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                To Dt. <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.TextBoxFor(x => x.ToRecDt, new { @class = "form-control form-control-lg", @placeholder = "To Rec.Dt", @tabindex = "8", @style = "font-family: Verdana;font-size:small; height:30px; width:180px", @type = "date" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                Stock Y/N <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.StockYN, Model.StockYNList, "Select", new { @class = "form-control StockYN select2", @tabindex = "9", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                Company <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.Company, Model.CompanyList, "Select", new { @class = "form-control Company select2", @tabindex = "10", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                Process Done <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.DoneProc, processList, "Select", new { @class = "form-control Company select2", @tabindex = "11", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label font-weight-bold customLabel" style="font-family:Verdana;font-size:small">
                                Next Process <span class="required"></span>
                            </label>
                            <div class="form-outline form-white mb-2">
                                @Html.DropDownListFor(x => x.NextProc, processList, "Select", new { @class = "form-control Company select2", @tabindex = "12", @style = "font-family: Verdana;font-size:small; height:30px;width:180px" })
                            </div>
                        </div>
                        <div class="col-md-5 mt-1 text-right">
                            <button class="btn btn-primary px-4 text-white" style="font-family:Verdana;font-size:medium" id="btnSave" onclick=" loadData();">
                                View (Alt+V)
                            </button>
                            <a href="/PipeMaster/index" class="btn btn-warning px-4 text-dark" style="font-family:Verdana;font-size:medium">
                                Cancel (Esc)
                            </a>
                        </div>
                    </div>
                    <div class="col-md-12 col-12 mb-2 mt-2">
                        <div class="row">
                            <div class="col-md-1 mb-2 float-left">
                                <select class="form-control form-control-sm" onchange="loadData()" id="drpReportPageNoDatable">
                                    @for (int i = 0; i < pageNoList.Count; i++)
                                    {
                                        string checkedd = "checked";
                                        <option checked="@checkedd" value="@pageNoList[i].Value">@pageNoList[i].Text</option>
                                        checkedd = string.Empty;
                                    }

                                </select>
                            </div>
                            <div class="col-md-5 col-12">
                                <div class="row">
                                    <div class="col-md-6">
                                        <select class="form-control select2 drpReportLayout">
                                            <option value="" ; style="width:200px">--Select Layout--</option>
                                            @if (layoutList != null && layoutList.Count > 0)
                                            {
                                                foreach (var item in layoutList)
                                                {
                                                    if (item.Selected)
                                                    {
                                                        <option selected value="@item.Value">@item.Text </option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.Value">@item.Text </option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-2 col-auto mb-2 custommt-2-3">
                                        @if (isAdministrator == 1)
                                        {
                                            <button class="btn btn-dark btn-sm text-white" style="font-family:Verdana;font-size:medium" onclick="window.open('/GridMaster/Index/' + $('.drpReportLayout').val(), '_blank');">
                                                Edit
                                            </button>
                                        }
                                    </div>
                                    <div class="col-md-4 mb-2 custommt-2-3">
                                        <button class="btn btn-primary btn-sm" id="btnExportToExcel">Excel</button>
                                        <button class="btn btn-primary btn-sm ml-6" id="btnExportToPDF">PDF</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3"></div>
                            <div class="col-md-3 col-12 float-right">
                                <input type="text" class="form-control form-control-sm" placeholder="Search" id="txtReportSearchDataTable" />
                            </div>
                        </div>
                    </div>
                    <div class="dataTable mt-3">

                    </div>
                    <div class="pager float-right"></div>
                </div>
            }
        </div>
    </div>
</div>

<script>

    var isRecentCalled = false;


    $(function () {
        $('#txtReportSearchDataTable').hide();
        SetSelect2()
        var pageIndex = '';
        var pageSize = '';
        var totalRecord = '';
        var isDelete = '@Html.Raw(userRight.IsDelete)';
        var isEdit = '@Html.Raw(userRight.IsEdit)';
    })

    var timer = null;
    $('#txtReportSearchDataTable').keyup(function (e) {
        if (e.keyCode >= 112 && e.keyCode <= 123) {
            e.preventDefault();
            return false;
        }
        else {
            clearTimeout(timer);

            timer = setTimeout(loadData, 1000)
        }

    });

    function loadData(pageIndex, columnName, sortBy) {
            isRecentCalled = true;
            if (pageIndex == undefined || pageIndex == "" || pageIndex == "0" || pageIndex == 0) {
                pageIndex = 1;
            }
            var layoutId = $('.drpReportLayout').val();

            if (!layoutId) {
                $('.drpReportLayout').val($('.drpReportLayout').children('option').eq(1).prop('value'));
                SetSelect2()

            }
            if (!columnName) {
                columnName = '';
            }
            if (!sortBy) {
                sortBy = '';
            }
            var od = $('#OD').val();
            var feetper = $('#FeetPer').val();
            var nb = $('#NB').val();
            var sch = $('#SCH').val();
            var grade = $('#Grade').val();
            var frRecDt = $('#FrRecDt').val();
            var toRecDt = $('#ToRecDt').val();
            var stockYN = $('#StockYN').val();
            var company = $('#Company').val();
            var DoneProc = $('#DoneProc').val();
            var NextProc = $('#NextProc').val();
            var finishid = $('#FinishVou').val();

            $('.dataTable').html();
            $.ajax({
                url: '/PipeMaster/GetReportView',
                type: 'GET',
                data: {
                    pageIndex: pageIndex, pageSize: $('#drpReportPageNoDatable').val(), searchValue: $('#txtReportSearchDataTable').val(), gridMstId: $('.drpReportLayout').val(), columnName: columnName, sortby: sortBy, od: od, feetper: feetper, nb: nb, sch: sch, gradeId: grade, frRecDt: frRecDt, toRecDt: toRecDt, companyId: company, DoneProc: DoneProc, NextProc: NextProc, stockYN: stockYN, finishid: finishid },
                dataType: 'HTML',
                traditional: true, // add this
                success: function (data) {
                    $('.dataTable').html(data);
                    $('#txtReportSearchDataTable').show();
                    setTimeout(function () {
                        isRecentCalled = false;
                    }, 2000)
                },
                failure: function (response) {
                    errorMessage(response);
                }
            });
    }

</script>
<script>
    var isRecentCalledEsc = false;
    (function (code) {
        code(window.jQuery, document, window);
    }(function ($, document, window) {
        $(function () {
            $(window)
                .initKeyboard({ debug: 1 })
                .on('Alt+V', function () {
                    loadData();
                })
        });
    }));

    $('#btnExportToExcel').click(function () {
        var od = $('#OD').val();
        var feetper= $('#FeetPer').val();
        var nb = $('#NB').val();
        var sch = $('#SCH').val();
        var grade = $('#Grade').val();
        var frRecDt = $('#FrRecDt').val();
        var toRecDt = $('#ToRecDt').val();
        var stockYN = $('#StockYN').val();
        var company = $('#Company').val();
        var finishid = $('#FinishVou').val();
        window.location.href = "/PipeMaster/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&od=" + od + "&feetper=" + feetper + "&nb=" + nb + "&sch=" + sch + "&gradeId=" + grade + "&frRecDt=" + frRecDt + "&toRecDt=" + toRecDt + "&companyId=" + company + "&stockYNId=" + stockYN + "&finishId=" + finishid;
    })

    $('#btnExportToPDF').click(function () {
        var od = $('#OD').val();
        var feetper= $('#FeetPer').val();
        var nb = $('#NB').val();
        var sch= $('#SCH').val();
        var grade = $('#Grade').val();
        var frRecDt = $('#FrRecDt').val();
        var toRecDt = $('#ToRecDt').val();
        var stockYN = $('#StockYN').val();
        var company = $('#Company').val();
        var finishid = $('#FinishVou').val();
        window.location.href = "/PipeMaster/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&od=" + od + "&feetper=" + feetper + "&nb=" + nb + "&sch=" + sch + "&gradeId=" + grade + "&frRecDt=" + frRecDt + "&toRecDt=" + toRecDt + "&companyId=" + company + "&stockYNId=" + stockYN + "&finishId=" + finishid;
    })
</script>
<script>

    function SetSelect2() {
        $(".select2").select2({
            placeholder: "---Select---",
        });
    }

</script>